 ### ARWEAVE ####
# file: Dockerfile
FROM ubuntu:20.04

# RUN apk update && apk add --no-cache openssh
RUN apt install --fix-broken
RUN apt update
RUN DEBIAN_FRONTEND="noninteractive" apt install tzdata -y
RUN apt install -y openssh-server curl git vim gnupg2 iputils-ping
RUN mkdir -p /root/.ssh/
RUN touch /root/.ssh/known_hosts
RUN ssh-keyscan github.com >> /root/.ssh/known_hosts
# RUN git clone --branch feature/testnet --recursive https://github.com/ArweaveTeam/arweave.git /opt/arweave

WORKDIR /root/

RUN wget -O erlang_solutions.asc https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc 
RUN apt-key add ./erlang_solutions.asc

RUN echo "deb https://packages.erlang-solutions.com/ubuntu focal contrib" | tee /etc/apt/sources.list.d/erlang.list

# RUN DEBIAN_FRONTEND="noninteractive" apt install tzdata -y
# CMD ["erl"]

WORKDIR /opt/arweave

COPY ./arweave-2.4.0.0.-testnet.tar.gz /opt/arweave

RUN rm -rf /var/lib/apt/lists/*

RUN apt update

RUN apt install -y esl-erlang=1:22.3.4.9-1
# RUN apt install -y openssh-server curl git wget gnupg iputils-ping cmake gcc make build-essential autoconf m4 libncurses5-dev libssh-dev libsqlite3-dev vim

# RUN apt install -y erlang

# RUN wget -q https://arweave.net/pRXqbfNtrHdbFO-pPewlVqIuRTRU7kiarADWFwHTlXw && tar -zxf pRXqbfNtrHdbFO-pPewlVqIuRTRU7kiarADWFwHTlXw -C /opt/arweave/

WORKDIR /opt/arweave/bin/

# RUN git clone https://github.com/tudorfil9/arweave-node.git /opt/arweave-node/ && cp /opt/arweave-node/start_w_epmd.sh .

# RUN chmod +x start_w_epmd.sh

ARG AR_RUNMODE="test"

ENV AR_RUNMODE=${AR_RUNMODE}

# ENTRYPOINT ./start_w_epmd.sh -r $AR_RUNMODE

# CMD "/opt/arweave/bin/start"

CMD ["/bin/ping","localhost"]

# Add metadata to the image to describe which port the container is listening on at runtime.
EXPOSE 1984


